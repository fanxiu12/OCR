{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"expo-core","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"./ExpoLocation","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getProviderStatusAsync = getProviderStatusAsync;\n  exports.getCurrentPositionAsync = getCurrentPositionAsync;\n  exports.getHeadingAsync = getHeadingAsync;\n  exports.watchHeadingAsync = watchHeadingAsync;\n  exports.geocodeAsync = geocodeAsync;\n  exports.reverseGeocodeAsync = reverseGeocodeAsync;\n  exports.watchPositionAsync = watchPositionAsync;\n  exports.requestPermissionsAsync = requestPermissionsAsync;\n  exports.hasServicesEnabledAsync = hasServicesEnabledAsync;\n  exports.startLocationUpdatesAsync = startLocationUpdatesAsync;\n  exports.stopLocationUpdatesAsync = stopLocationUpdatesAsync;\n  exports.hasStartedLocationUpdatesAsync = hasStartedLocationUpdatesAsync;\n  exports.startGeofencingAsync = startGeofencingAsync;\n  exports.stopGeofencingAsync = stopGeofencingAsync;\n  exports.hasStartedGeofencingAsync = hasStartedGeofencingAsync;\n  exports.installWebGeolocationPolyfill = installWebGeolocationPolyfill;\n  exports._getCurrentWatchId = _getCurrentWatchId;\n  exports.EventEmitter = exports.GeofencingRegionState = exports.GeofencingEventType = exports.Accuracy = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _expoCore = _$$_REQUIRE(_dependencyMap[2], \"expo-core\");\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"invariant\"));\n\n  var _ExpoLocation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./ExpoLocation\"));\n\n  var LocationEventEmitter = new _expoCore.EventEmitter(_ExpoLocation.default);\n  exports.EventEmitter = LocationEventEmitter;\n  ;\n  ;\n  ;\n  ;\n  ;\n  ;\n  ;\n  ;\n  var LocationAccuracy;\n  exports.Accuracy = LocationAccuracy;\n\n  (function (LocationAccuracy) {\n    LocationAccuracy[LocationAccuracy[\"Lowest\"] = 1] = \"Lowest\";\n    LocationAccuracy[LocationAccuracy[\"Low\"] = 2] = \"Low\";\n    LocationAccuracy[LocationAccuracy[\"Balanced\"] = 3] = \"Balanced\";\n    LocationAccuracy[LocationAccuracy[\"High\"] = 4] = \"High\";\n    LocationAccuracy[LocationAccuracy[\"Highest\"] = 5] = \"Highest\";\n    LocationAccuracy[LocationAccuracy[\"BestForNavigation\"] = 6] = \"BestForNavigation\";\n  })(LocationAccuracy || (exports.Accuracy = LocationAccuracy = {}));\n\n  var GeofencingEventType;\n  exports.GeofencingEventType = GeofencingEventType;\n\n  (function (GeofencingEventType) {\n    GeofencingEventType[GeofencingEventType[\"Enter\"] = 1] = \"Enter\";\n    GeofencingEventType[GeofencingEventType[\"Exit\"] = 2] = \"Exit\";\n  })(GeofencingEventType || (exports.GeofencingEventType = GeofencingEventType = {}));\n\n  var GeofencingRegionState;\n  exports.GeofencingRegionState = GeofencingRegionState;\n\n  (function (GeofencingRegionState) {\n    GeofencingRegionState[GeofencingRegionState[\"Unknown\"] = 0] = \"Unknown\";\n    GeofencingRegionState[GeofencingRegionState[\"Inside\"] = 1] = \"Inside\";\n    GeofencingRegionState[GeofencingRegionState[\"Outside\"] = 2] = \"Outside\";\n  })(GeofencingRegionState || (exports.GeofencingRegionState = GeofencingRegionState = {}));\n\n  var nextWatchId = 0;\n  var headingId;\n\n  function _getNextWatchId() {\n    nextWatchId++;\n    return nextWatchId;\n  }\n\n  function _getCurrentWatchId() {\n    return nextWatchId;\n  }\n\n  var watchCallbacks = {};\n  var deviceEventSubscription;\n  var headingEventSub;\n  var googleApiKey;\n  var googleApiUrl = 'https://maps.googleapis.com/maps/api/geocode/json';\n\n  function getProviderStatusAsync() {\n    return _regenerator.default.async(function getProviderStatusAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", _ExpoLocation.default.getProviderStatusAsync());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getCurrentPositionAsync() {\n    var options,\n        _args2 = arguments;\n    return _regenerator.default.async(function getCurrentPositionAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            options = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n            return _context2.abrupt(\"return\", _ExpoLocation.default.getCurrentPositionAsync(options));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function getHeadingAsync() {\n    return _regenerator.default.async(function getHeadingAsync$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            return _context4.abrupt(\"return\", new Promise(function _callee(resolve, reject) {\n              var tries, headingSub, done, subscription, _tries;\n\n              return _regenerator.default.async(function _callee$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.prev = 0;\n\n                      if (!headingEventSub) {\n                        _context3.next = 6;\n                        break;\n                      }\n\n                      tries = 0;\n                      headingSub = LocationEventEmitter.addListener('Exponent.headingChanged', function (_ref) {\n                        var heading = _ref.heading;\n\n                        if (heading.accuracy > 1 || tries > 5) {\n                          resolve(heading);\n                          LocationEventEmitter.removeSubscription(headingSub);\n                        } else {\n                          tries += 1;\n                        }\n                      });\n                      _context3.next = 12;\n                      break;\n\n                    case 6:\n                      done = false;\n                      _tries = 0;\n                      _context3.next = 10;\n                      return _regenerator.default.awrap(watchHeadingAsync(function (heading) {\n                        if (!done) {\n                          if (heading.accuracy > 1 || _tries > 5) {\n                            subscription.remove();\n                            resolve(heading);\n                            done = true;\n                          } else {\n                            _tries += 1;\n                          }\n                        } else {\n                          subscription.remove();\n                        }\n                      }));\n\n                    case 10:\n                      subscription = _context3.sent;\n\n                      if (done) {\n                        subscription.remove();\n                      }\n\n                    case 12:\n                      _context3.next = 17;\n                      break;\n\n                    case 14:\n                      _context3.prev = 14;\n                      _context3.t0 = _context3[\"catch\"](0);\n                      reject(_context3.t0);\n\n                    case 17:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, null, this, [[0, 14]]);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function watchHeadingAsync(callback) {\n    return _regenerator.default.async(function watchHeadingAsync$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (headingEventSub) {\n              _removeHeadingWatcher(headingId);\n            }\n\n            headingEventSub = LocationEventEmitter.addListener('Exponent.headingChanged', function (_ref2) {\n              var watchId = _ref2.watchId,\n                  heading = _ref2.heading;\n              var callback = watchCallbacks[watchId];\n\n              if (callback) {\n                callback(heading);\n              } else {\n                _ExpoLocation.default.removeWatchAsync(watchId);\n              }\n            });\n            headingId = _getNextWatchId();\n            watchCallbacks[headingId] = callback;\n            _context5.next = 6;\n            return _regenerator.default.awrap(_ExpoLocation.default.watchDeviceHeading(headingId));\n\n          case 6:\n            return _context5.abrupt(\"return\", {\n              remove: function remove() {\n                _removeHeadingWatcher(headingId);\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function _removeHeadingWatcher(watchId) {\n    if (!watchCallbacks[watchId]) {\n      return;\n    }\n\n    delete watchCallbacks[watchId];\n\n    _ExpoLocation.default.removeWatchAsync(watchId);\n\n    if (headingEventSub) {\n      LocationEventEmitter.removeSubscription(headingEventSub);\n      headingEventSub = null;\n    }\n  }\n\n  function _maybeInitializeEmitterSubscription() {\n    if (!deviceEventSubscription) {\n      deviceEventSubscription = LocationEventEmitter.addListener('Exponent.locationChanged', function (_ref3) {\n        var watchId = _ref3.watchId,\n            location = _ref3.location;\n        var callback = watchCallbacks[watchId];\n\n        if (callback) {\n          callback(location);\n        } else {\n          _ExpoLocation.default.removeWatchAsync(watchId);\n        }\n      });\n    }\n  }\n\n  function geocodeAsync(address) {\n    return _regenerator.default.async(function geocodeAsync$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            return _context6.abrupt(\"return\", _ExpoLocation.default.geocodeAsync(address).catch(function (error) {\n              var platformUsesGoogleMaps = _expoCore.Platform.OS === 'android' || _expoCore.Platform.OS === 'web';\n\n              if (platformUsesGoogleMaps && error.code === 'E_NO_GEOCODER') {\n                if (!googleApiKey) {\n                  throw new Error(error.message + ' Please set a Google API Key to use geocoding.');\n                }\n\n                return _googleGeocodeAsync(address);\n              }\n\n              throw error;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function reverseGeocodeAsync(location) {\n    return _regenerator.default.async(function reverseGeocodeAsync$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            if (!(typeof location.latitude !== 'number' || typeof location.longitude !== 'number')) {\n              _context7.next = 2;\n              break;\n            }\n\n            throw new TypeError('Location should be an object with number properties `latitude` and `longitude`.');\n\n          case 2:\n            return _context7.abrupt(\"return\", _ExpoLocation.default.reverseGeocodeAsync(location).catch(function (error) {\n              var platformUsesGoogleMaps = _expoCore.Platform.OS === 'android' || _expoCore.Platform.OS === 'web';\n\n              if (platformUsesGoogleMaps && error.code === 'E_NO_GEOCODER') {\n                if (!googleApiKey) {\n                  throw new Error(error.message + ' Please set a Google API Key to use geocoding.');\n                }\n\n                return _googleReverseGeocodeAsync(location);\n              }\n\n              throw error;\n            }));\n\n          case 3:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function setApiKey(apiKey) {\n    googleApiKey = apiKey;\n  }\n\n  function _googleGeocodeAsync(address) {\n    var result, resultObject;\n    return _regenerator.default.async(function _googleGeocodeAsync$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return _regenerator.default.awrap(fetch(googleApiUrl + \"?key=\" + googleApiKey + \"&address=\" + encodeURI(address)));\n\n          case 2:\n            result = _context8.sent;\n            _context8.next = 5;\n            return _regenerator.default.awrap(result.json());\n\n          case 5:\n            resultObject = _context8.sent;\n\n            if (!(resultObject.status !== 'OK')) {\n              _context8.next = 8;\n              break;\n            }\n\n            throw new Error('An error occurred during geocoding.');\n\n          case 8:\n            return _context8.abrupt(\"return\", resultObject.results.map(function (result) {\n              var location = result.geometry.location;\n              return {\n                latitude: location.lat,\n                longitude: location.lng\n              };\n            }));\n\n          case 9:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function _googleReverseGeocodeAsync(options) {\n    var result, resultObject;\n    return _regenerator.default.async(function _googleReverseGeocodeAsync$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return _regenerator.default.awrap(fetch(googleApiUrl + \"?key=\" + googleApiKey + \"&latlng=\" + options.latitude + \",\" + options.longitude));\n\n          case 2:\n            result = _context9.sent;\n            _context9.next = 5;\n            return _regenerator.default.awrap(result.json());\n\n          case 5:\n            resultObject = _context9.sent;\n\n            if (!(resultObject.status !== 'OK')) {\n              _context9.next = 8;\n              break;\n            }\n\n            throw new Error('An error occurred during geocoding.');\n\n          case 8:\n            return _context9.abrupt(\"return\", resultObject.results.map(function (result) {\n              var address = {};\n              result.address_components.forEach(function (component) {\n                if (component.types.includes('locality')) {\n                  address.city = component.long_name;\n                } else if (component.types.includes('street_address')) {\n                  address.street = component.long_name;\n                } else if (component.types.includes('administrative_area_level_1')) {\n                  address.region = component.long_name;\n                } else if (component.types.includes('country')) {\n                  address.country = component.long_name;\n                } else if (component.types.includes('postal_code')) {\n                  address.postalCode = component.long_name;\n                } else if (component.types.includes('point_of_interest')) {\n                  address.name = component.long_name;\n                }\n              });\n              return address;\n            }));\n\n          case 9:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function watchPosition(success, error, options) {\n    _maybeInitializeEmitterSubscription();\n\n    var watchId = _getNextWatchId();\n\n    watchCallbacks[watchId] = success;\n\n    _ExpoLocation.default.watchPositionImplAsync(watchId, options).catch(function (err) {\n      _removeWatcher(watchId);\n\n      error({\n        watchId: watchId,\n        message: err.message,\n        code: err.code\n      });\n    });\n\n    return watchId;\n  }\n\n  function watchPositionAsync(options, callback) {\n    var watchId;\n    return _regenerator.default.async(function watchPositionAsync$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _maybeInitializeEmitterSubscription();\n\n            watchId = _getNextWatchId();\n            watchCallbacks[watchId] = callback;\n            _context10.next = 5;\n            return _regenerator.default.awrap(_ExpoLocation.default.watchPositionImplAsync(watchId, options));\n\n          case 5:\n            return _context10.abrupt(\"return\", {\n              remove: function remove() {\n                _removeWatcher(watchId);\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function clearWatch(watchId) {\n    _removeWatcher(watchId);\n  }\n\n  function _removeWatcher(watchId) {\n    if (!watchCallbacks[watchId]) {\n      return;\n    }\n\n    _ExpoLocation.default.removeWatchAsync(watchId);\n\n    delete watchCallbacks[watchId];\n\n    if (Object.keys(watchCallbacks).length === 0 && deviceEventSubscription) {\n      LocationEventEmitter.removeSubscription(deviceEventSubscription);\n      deviceEventSubscription = null;\n    }\n  }\n\n  function getCurrentPosition(success) {\n    var error = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    (0, _invariant.default)(typeof success === 'function', 'Must provide a valid success callback.');\n    (0, _invariant.default)(typeof options === 'object', 'options must be an object.');\n\n    _getCurrentPositionAsyncWrapper(success, error, options);\n  }\n\n  function _getCurrentPositionAsyncWrapper(success, error, options) {\n    var result;\n    return _regenerator.default.async(function _getCurrentPositionAsyncWrapper$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.prev = 0;\n            _context11.next = 3;\n            return _regenerator.default.awrap(_ExpoLocation.default.requestPermissionsAsync());\n\n          case 3:\n            _context11.next = 5;\n            return _regenerator.default.awrap(getCurrentPositionAsync(options));\n\n          case 5:\n            result = _context11.sent;\n            success(result);\n            _context11.next = 12;\n            break;\n\n          case 9:\n            _context11.prev = 9;\n            _context11.t0 = _context11[\"catch\"](0);\n            error(_context11.t0);\n\n          case 12:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, null, this, [[0, 9]]);\n  }\n\n  function requestPermissionsAsync() {\n    return _regenerator.default.async(function requestPermissionsAsync$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.next = 2;\n            return _regenerator.default.awrap(_ExpoLocation.default.requestPermissionsAsync());\n\n          case 2:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function hasServicesEnabledAsync() {\n    return _regenerator.default.async(function hasServicesEnabledAsync$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.next = 2;\n            return _regenerator.default.awrap(_ExpoLocation.default.hasServicesEnabledAsync());\n\n          case 2:\n            return _context13.abrupt(\"return\", _context13.sent);\n\n          case 3:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function _validateTaskName(taskName) {\n    (0, _invariant.default)(taskName && typeof taskName === 'string', '`taskName` must be a non-empty string.');\n  }\n\n  function startLocationUpdatesAsync(taskName) {\n    var options,\n        _args14 = arguments;\n    return _regenerator.default.async(function startLocationUpdatesAsync$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            options = _args14.length > 1 && _args14[1] !== undefined ? _args14[1] : {\n              accuracy: LocationAccuracy.Balanced\n            };\n\n            _validateTaskName(taskName);\n\n            _context14.next = 4;\n            return _regenerator.default.awrap(_ExpoLocation.default.startLocationUpdatesAsync(taskName, options));\n\n          case 4:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function stopLocationUpdatesAsync(taskName) {\n    return _regenerator.default.async(function stopLocationUpdatesAsync$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _validateTaskName(taskName);\n\n            _context15.next = 3;\n            return _regenerator.default.awrap(_ExpoLocation.default.stopLocationUpdatesAsync(taskName));\n\n          case 3:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function hasStartedLocationUpdatesAsync(taskName) {\n    return _regenerator.default.async(function hasStartedLocationUpdatesAsync$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            _validateTaskName(taskName);\n\n            return _context16.abrupt(\"return\", _ExpoLocation.default.hasStartedLocationUpdatesAsync(taskName));\n\n          case 2:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function _validateRegions(regions) {\n    if (!regions || regions.length === 0) {\n      throw new Error('Regions array cannot be empty. Use `stopGeofencingAsync` if you want to stop geofencing all regions');\n    }\n\n    for (var _iterator = regions, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n      var _ref4;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref4 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref4 = _i.value;\n      }\n\n      var _region = _ref4;\n\n      if (typeof _region.latitude !== 'number') {\n        throw new TypeError(\"Region's latitude must be a number. Got '\" + _region.latitude + \"' instead.\");\n      }\n\n      if (typeof _region.longitude !== 'number') {\n        throw new TypeError(\"Region's longitude must be a number. Got '\" + _region.longitude + \"' instead.\");\n      }\n\n      if (typeof _region.radius !== 'number') {\n        throw new TypeError(\"Region's radius must be a number. Got '\" + _region.radius + \"' instead.\");\n      }\n    }\n  }\n\n  function startGeofencingAsync(taskName) {\n    var regions,\n        _args17 = arguments;\n    return _regenerator.default.async(function startGeofencingAsync$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            regions = _args17.length > 1 && _args17[1] !== undefined ? _args17[1] : [];\n\n            _validateTaskName(taskName);\n\n            _validateRegions(regions);\n\n            _context17.next = 5;\n            return _regenerator.default.awrap(_ExpoLocation.default.startGeofencingAsync(taskName, {\n              regions: regions\n            }));\n\n          case 5:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function stopGeofencingAsync(taskName) {\n    return _regenerator.default.async(function stopGeofencingAsync$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            _validateTaskName(taskName);\n\n            _context18.next = 3;\n            return _regenerator.default.awrap(_ExpoLocation.default.stopGeofencingAsync(taskName));\n\n          case 3:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function hasStartedGeofencingAsync(taskName) {\n    return _regenerator.default.async(function hasStartedGeofencingAsync$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            _validateTaskName(taskName);\n\n            return _context19.abrupt(\"return\", _ExpoLocation.default.hasStartedGeofencingAsync(taskName));\n\n          case 2:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function installWebGeolocationPolyfill() {\n    if (_expoCore.Platform.OS !== 'web') {\n      window.navigator.geolocation = {\n        getCurrentPosition: getCurrentPosition,\n        watchPosition: watchPosition,\n        clearWatch: clearWatch,\n        stopObserving: function stopObserving() {}\n      };\n    }\n  }\n});","map":[[28,0,1,0],[30,0,2,0],[32,0,3,0],[34,0,4,0],[34,6,4,6,"LocationEventEmitter"],[34,26,4,26],[34,29,4,29],[34,33,4,33,"EventEmitter"],[34,55,4,29],[34,56,4,46,"ExpoLocation"],[34,77,4,29],[34,78,4,0],[36,0,5,0],[37,0,6,0],[38,0,7,0],[39,0,8,0],[40,0,9,0],[41,0,10,0],[42,0,11,0],[43,0,12,0],[44,0,13,0],[44,6,13,4,"LocationAccuracy"],[44,22,13,0],[47,0,14,0],[47,3,14,1],[47,13,14,11,"LocationAccuracy"],[47,29,14,1],[47,31,14,29],[48,0,15,4,"LocationAccuracy"],[48,4,15,4,"LocationAccuracy"],[48,20,15,20],[48,21,15,21,"LocationAccuracy"],[48,37,15,37],[48,38,15,38],[48,46,15,37],[48,47,15,21],[48,50,15,50],[48,51,15,20],[48,52,15,4],[48,55,15,55],[48,63,15,4],[49,0,16,4,"LocationAccuracy"],[49,4,16,4,"LocationAccuracy"],[49,20,16,20],[49,21,16,21,"LocationAccuracy"],[49,37,16,37],[49,38,16,38],[49,43,16,37],[49,44,16,21],[49,47,16,47],[49,48,16,20],[49,49,16,4],[49,52,16,52],[49,57,16,4],[50,0,17,4,"LocationAccuracy"],[50,4,17,4,"LocationAccuracy"],[50,20,17,20],[50,21,17,21,"LocationAccuracy"],[50,37,17,37],[50,38,17,38],[50,48,17,37],[50,49,17,21],[50,52,17,52],[50,53,17,20],[50,54,17,4],[50,57,17,57],[50,67,17,4],[51,0,18,4,"LocationAccuracy"],[51,4,18,4,"LocationAccuracy"],[51,20,18,20],[51,21,18,21,"LocationAccuracy"],[51,37,18,37],[51,38,18,38],[51,44,18,37],[51,45,18,21],[51,48,18,48],[51,49,18,20],[51,50,18,4],[51,53,18,53],[51,59,18,4],[52,0,19,4,"LocationAccuracy"],[52,4,19,4,"LocationAccuracy"],[52,20,19,20],[52,21,19,21,"LocationAccuracy"],[52,37,19,37],[52,38,19,38],[52,47,19,37],[52,48,19,21],[52,51,19,51],[52,52,19,20],[52,53,19,4],[52,56,19,56],[52,65,19,4],[53,0,20,4,"LocationAccuracy"],[53,4,20,4,"LocationAccuracy"],[53,20,20,20],[53,21,20,21,"LocationAccuracy"],[53,37,20,37],[53,38,20,38],[53,57,20,37],[53,58,20,21],[53,61,20,61],[53,62,20,20],[53,63,20,4],[53,66,20,66],[53,85,20,4],[54,0,21,1],[54,3,14,0],[54,5,21,3,"LocationAccuracy"],[54,21,21,19],[54,45,21,24,"LocationAccuracy"],[54,61,21,40],[54,64,21,43],[54,66,21,19],[54,67,14,0],[56,0,23,7],[56,6,23,11,"GeofencingEventType"],[56,25,23,7],[59,0,24,0],[59,3,24,1],[59,13,24,11,"GeofencingEventType"],[59,32,24,1],[59,34,24,32],[60,0,25,4,"GeofencingEventType"],[60,4,25,4,"GeofencingEventType"],[60,23,25,23],[60,24,25,24,"GeofencingEventType"],[60,43,25,43],[60,44,25,44],[60,51,25,43],[60,52,25,24],[60,55,25,55],[60,56,25,23],[60,57,25,4],[60,60,25,60],[60,67,25,4],[61,0,26,4,"GeofencingEventType"],[61,4,26,4,"GeofencingEventType"],[61,23,26,23],[61,24,26,24,"GeofencingEventType"],[61,43,26,43],[61,44,26,44],[61,50,26,43],[61,51,26,24],[61,54,26,54],[61,55,26,23],[61,56,26,4],[61,59,26,59],[61,65,26,4],[62,0,27,1],[62,3,24,0],[62,5,27,3,"GeofencingEventType"],[62,24,27,22],[62,59,27,27,"GeofencingEventType"],[62,78,27,46],[62,81,27,49],[62,83,27,22],[62,84,24,0],[64,0,28,7],[64,6,28,11,"GeofencingRegionState"],[64,27,28,7],[67,0,29,0],[67,3,29,1],[67,13,29,11,"GeofencingRegionState"],[67,34,29,1],[67,36,29,34],[68,0,30,4,"GeofencingRegionState"],[68,4,30,4,"GeofencingRegionState"],[68,25,30,25],[68,26,30,26,"GeofencingRegionState"],[68,47,30,47],[68,48,30,48],[68,57,30,47],[68,58,30,26],[68,61,30,61],[68,62,30,25],[68,63,30,4],[68,66,30,66],[68,75,30,4],[69,0,31,4,"GeofencingRegionState"],[69,4,31,4,"GeofencingRegionState"],[69,25,31,25],[69,26,31,26,"GeofencingRegionState"],[69,47,31,47],[69,48,31,48],[69,56,31,47],[69,57,31,26],[69,60,31,60],[69,61,31,25],[69,62,31,4],[69,65,31,65],[69,73,31,4],[70,0,32,4,"GeofencingRegionState"],[70,4,32,4,"GeofencingRegionState"],[70,25,32,25],[70,26,32,26,"GeofencingRegionState"],[70,47,32,47],[70,48,32,48],[70,57,32,47],[70,58,32,26],[70,61,32,61],[70,62,32,25],[70,63,32,4],[70,66,32,66],[70,75,32,4],[71,0,33,1],[71,3,29,0],[71,5,33,3,"GeofencingRegionState"],[71,26,33,24],[71,63,33,29,"GeofencingRegionState"],[71,84,33,50],[71,87,33,53],[71,89,33,24],[71,90,29,0],[73,0,34,0],[73,6,34,4,"nextWatchId"],[73,17,34,15],[73,20,34,18],[73,21,34,0],[74,0,35,0],[74,6,35,4,"headingId"],[74,15,35,0],[76,0,36,0],[76,11,36,9,"_getNextWatchId"],[76,26,36,0],[76,29,36,27],[77,0,37,4,"nextWatchId"],[77,4,37,4,"nextWatchId"],[77,15,37,15],[78,0,38,4],[78,11,38,11,"nextWatchId"],[78,22,38,4],[79,0,39,1],[81,0,40,0],[81,11,40,9,"_getCurrentWatchId"],[81,29,40,0],[81,32,40,30],[82,0,41,4],[82,11,41,11,"nextWatchId"],[82,22,41,4],[83,0,42,1],[85,0,43,0],[85,6,43,4,"watchCallbacks"],[85,20,43,18],[85,23,43,21],[85,25,43,0],[86,0,44,0],[86,6,44,4,"deviceEventSubscription"],[86,29,44,0],[87,0,45,0],[87,6,45,4,"headingEventSub"],[87,21,45,0],[88,0,46,0],[88,6,46,4,"googleApiKey"],[88,18,46,0],[89,0,47,0],[89,6,47,6,"googleApiUrl"],[89,18,47,18],[89,21,47,21],[89,72,47,0],[91,0,48,7],[91,11,48,22,"getProviderStatusAsync"],[91,33,48,7],[92,0,48,7],[93,0,48,7],[94,0,48,7],[95,0,48,7],[96,0,48,7],[96,45,49,11,"ExpoLocation"],[96,67,49,24,"getProviderStatusAsync"],[96,89,49,11],[96,91,48,7],[98,0,48,7],[99,0,48,7],[100,0,48,7],[101,0,48,7],[102,0,48,7],[103,0,48,7],[104,0,48,7],[106,0,51,7],[106,11,51,22,"getCurrentPositionAsync"],[106,34,51,7],[107,0,51,7],[108,0,51,7],[109,0,51,7],[110,0,51,7],[111,0,51,7],[112,0,51,7],[113,0,51,46,"options"],[113,12,51,46,"options"],[113,19,51,7],[113,81,51,56],[113,83,51,7],[114,0,51,7],[114,46,52,11,"ExpoLocation"],[114,68,52,24,"getCurrentPositionAsync"],[114,91,52,11],[114,92,52,48,"options"],[114,99,52,11],[114,100,51,7],[116,0,51,7],[117,0,51,7],[118,0,51,7],[119,0,51,7],[120,0,51,7],[121,0,51,7],[122,0,51,7],[124,0,57,7],[124,11,57,22,"getHeadingAsync"],[124,26,57,7],[125,0,57,7],[126,0,57,7],[127,0,57,7],[128,0,57,7],[129,0,57,7],[129,46,58,11],[129,50,58,15,"Promise"],[129,57,58,11],[129,58,58,23],[129,75,58,30,"resolve"],[129,82,58,23],[129,84,58,39,"reject"],[129,90,58,23],[130,0,58,23],[132,0,58,23],[133,0,58,23],[134,0,58,23],[135,0,58,23],[136,0,58,23],[138,0,58,23],[138,27,61,16,"headingEventSub"],[138,42,58,23],[139,0,58,23],[140,0,58,23],[141,0,58,23],[143,0,62,20,"tries"],[143,22,62,20,"tries"],[143,27,58,23],[143,30,62,28],[143,31,58,23],[144,0,63,22,"headingSub"],[144,22,63,22,"headingSub"],[144,32,58,23],[144,35,63,35,"LocationEventEmitter"],[144,55,63,55],[144,56,63,56,"addListener"],[144,67,63,35],[144,68,63,68],[144,93,63,35],[144,95,63,95],[144,111,63,112],[145,0,63,112],[145,28,63,98,"heading"],[145,35,63,112],[145,43,63,98,"heading"],[145,50,63,112],[147,0,64,20],[147,28,64,24,"heading"],[147,35,64,31],[147,36,64,32,"accuracy"],[147,44,64,24],[147,47,64,43],[147,48,64,24],[147,52,64,48,"tries"],[147,57,64,53],[147,60,64,56],[147,61,64,20],[147,63,64,59],[148,0,65,24,"resolve"],[148,26,65,24,"resolve"],[148,33,65,31],[148,34,65,32,"heading"],[148,41,65,31],[148,42,65,24],[149,0,66,24,"LocationEventEmitter"],[149,26,66,24,"LocationEventEmitter"],[149,46,66,44],[149,47,66,45,"removeSubscription"],[149,65,66,24],[149,66,66,64,"headingSub"],[149,76,66,24],[150,0,67,21],[150,25,64,20],[150,31,68,25],[151,0,69,24,"tries"],[151,26,69,24,"tries"],[151,31,69,29],[151,35,69,33],[151,36,69,24],[152,0,70,21],[153,0,71,17],[153,23,63,35],[153,24,58,23],[154,0,58,23],[155,0,58,23],[157,0,58,23],[158,0,74,20,"done"],[158,22,74,20,"done"],[158,26,58,23],[158,29,74,27],[158,34,58,23],[159,0,76,20,"tries"],[159,22,76,20,"tries"],[159,28,58,23],[159,31,76,28],[159,32,58,23],[160,0,58,23],[161,0,58,23],[161,56,77,37,"watchHeadingAsync"],[161,73,77,54],[161,74,77,55],[161,84,77,56,"heading"],[161,91,77,55],[161,93,77,68],[162,0,78,20],[162,28,78,24],[162,29,78,25,"done"],[162,33,78,20],[162,35,78,31],[163,0,79,24],[163,30,79,28,"heading"],[163,37,79,35],[163,38,79,36,"accuracy"],[163,46,79,28],[163,49,79,47],[163,50,79,28],[163,54,79,52,"tries"],[163,60,79,57],[163,63,79,60],[163,64,79,24],[163,66,79,63],[164,0,80,28,"subscription"],[164,28,80,28,"subscription"],[164,40,80,40],[164,41,80,41,"remove"],[164,47,80,28],[165,0,81,28,"resolve"],[165,28,81,28,"resolve"],[165,35,81,35],[165,36,81,36,"heading"],[165,43,81,35],[165,44,81,28],[166,0,82,28,"done"],[166,28,82,28,"done"],[166,32,82,32],[166,35,82,35],[166,39,82,28],[167,0,83,25],[167,27,79,24],[167,33,84,29],[168,0,85,28,"tries"],[168,28,85,28,"tries"],[168,34,85,33],[168,38,85,37],[168,39,85,28],[169,0,86,25],[170,0,87,21],[170,25,78,20],[170,31,88,25],[171,0,89,24,"subscription"],[171,26,89,24,"subscription"],[171,38,89,36],[171,39,89,37,"remove"],[171,45,89,24],[172,0,90,21],[173,0,91,17],[173,23,77,54],[173,24,58,23],[175,0,58,23],[176,0,77,16,"subscription"],[176,22,77,16,"subscription"],[176,34,58,23],[178,0,92,16],[178,26,92,20,"done"],[178,30,92,16],[178,32,92,26],[179,0,93,20,"subscription"],[179,24,93,20,"subscription"],[179,36,93,32],[179,37,93,33,"remove"],[179,43,93,20],[180,0,94,17],[182,0,58,23],[183,0,58,23],[184,0,58,23],[186,0,58,23],[187,0,58,23],[188,0,58,23],[189,0,98,12,"reject"],[189,22,98,12,"reject"],[189,28,98,18],[189,42,98,12],[191,0,58,23],[192,0,58,23],[193,0,58,23],[194,0,58,23],[195,0,58,23],[196,0,58,23],[197,0,58,23],[197,13,58,11],[197,14,57,7],[199,0,57,7],[200,0,57,7],[201,0,57,7],[202,0,57,7],[203,0,57,7],[204,0,57,7],[205,0,57,7],[207,0,102,7],[207,11,102,22,"watchHeadingAsync"],[207,28,102,7],[207,29,102,40,"callback"],[207,37,102,7],[208,0,102,7],[209,0,102,7],[210,0,102,7],[211,0,102,7],[212,0,104,4],[212,16,104,8,"headingEventSub"],[212,31,104,4],[212,33,104,25],[213,0,105,8,"_removeHeadingWatcher"],[213,14,105,8,"_removeHeadingWatcher"],[213,35,105,29],[213,36,105,30,"headingId"],[213,45,105,29],[213,46,105,8],[214,0,106,5],[216,0,107,4,"headingEventSub"],[216,12,107,4,"headingEventSub"],[216,27,107,19],[216,30,107,22,"LocationEventEmitter"],[216,50,107,42],[216,51,107,43,"addListener"],[216,62,107,22],[216,63,107,55],[216,88,107,22],[216,90,107,82],[216,107,107,108],[217,0,107,108],[217,18,107,85,"watchId"],[217,25,107,108],[217,34,107,85,"watchId"],[217,41,107,108],[218,0,107,108],[218,18,107,94,"heading"],[218,25,107,108],[218,34,107,94,"heading"],[218,41,107,108],[219,0,108,8],[219,18,108,14,"callback"],[219,26,108,22],[219,29,108,25,"watchCallbacks"],[219,43,108,39],[219,44,108,40,"watchId"],[219,51,108,39],[219,52,108,8],[221,0,109,8],[221,18,109,12,"callback"],[221,26,109,8],[221,28,109,22],[222,0,110,12,"callback"],[222,16,110,12,"callback"],[222,24,110,20],[222,25,110,21,"heading"],[222,32,110,20],[222,33,110,12],[223,0,111,9],[223,15,109,8],[223,21,112,13],[224,0,113,12,"ExpoLocation"],[224,38,113,25,"removeWatchAsync"],[224,54,113,12],[224,55,113,42,"watchId"],[224,62,113,12],[225,0,114,9],[226,0,115,5],[226,13,107,22],[226,14,107,4],[227,0,116,4,"headingId"],[227,12,116,4,"headingId"],[227,21,116,13],[227,24,116,16,"_getNextWatchId"],[227,39,116,31],[227,41,116,4],[228,0,117,4,"watchCallbacks"],[228,12,117,4,"watchCallbacks"],[228,26,117,18],[228,27,117,19,"headingId"],[228,36,117,18],[228,37,117,4],[228,40,117,32,"callback"],[228,48,117,4],[229,0,102,7],[230,0,102,7],[230,46,118,10,"ExpoLocation"],[230,68,118,23,"watchDeviceHeading"],[230,86,118,10],[230,87,118,42,"headingId"],[230,96,118,10],[230,97,102,7],[232,0,102,7],[233,0,102,7],[233,46,119,11],[234,0,120,8,"remove"],[234,14,120,8,"remove"],[234,20,119,11],[234,40,120,17],[235,0,121,12,"_removeHeadingWatcher"],[235,16,121,12,"_removeHeadingWatcher"],[235,37,121,33],[235,38,121,34,"headingId"],[235,47,121,33],[235,48,121,12],[236,0,122,9],[237,0,119,11],[237,13,102,7],[239,0,102,7],[240,0,102,7],[241,0,102,7],[242,0,102,7],[243,0,102,7],[244,0,102,7],[245,0,102,7],[247,0,126,0],[247,11,126,9,"_removeHeadingWatcher"],[247,32,126,0],[247,33,126,31,"watchId"],[247,40,126,0],[247,42,126,40],[248,0,127,4],[248,8,127,8],[248,9,127,9,"watchCallbacks"],[248,23,127,23],[248,24,127,24,"watchId"],[248,31,127,23],[248,32,127,4],[248,34,127,34],[249,0,128,8],[250,0,129,5],[252,0,130,4],[252,11,130,11,"watchCallbacks"],[252,25,130,25],[252,26,130,26,"watchId"],[252,33,130,25],[252,34,130,4],[254,0,131,4,"ExpoLocation"],[254,26,131,17,"removeWatchAsync"],[254,42,131,4],[254,43,131,34,"watchId"],[254,50,131,4],[256,0,132,4],[256,8,132,8,"headingEventSub"],[256,23,132,4],[256,25,132,25],[257,0,133,8,"LocationEventEmitter"],[257,6,133,8,"LocationEventEmitter"],[257,26,133,28],[257,27,133,29,"removeSubscription"],[257,45,133,8],[257,46,133,48,"headingEventSub"],[257,61,133,8],[258,0,134,8,"headingEventSub"],[258,6,134,8,"headingEventSub"],[258,21,134,23],[258,24,134,26],[258,28,134,8],[259,0,135,5],[260,0,136,1],[262,0,138,0],[262,11,138,9,"_maybeInitializeEmitterSubscription"],[262,46,138,0],[262,49,138,47],[263,0,139,4],[263,8,139,8],[263,9,139,9,"deviceEventSubscription"],[263,32,139,4],[263,34,139,34],[264,0,140,8,"deviceEventSubscription"],[264,6,140,8,"deviceEventSubscription"],[264,29,140,31],[264,32,140,34,"LocationEventEmitter"],[264,52,140,54],[264,53,140,55,"addListener"],[264,64,140,34],[264,65,140,67],[264,91,140,34],[264,93,140,95],[264,110,140,122],[265,0,140,122],[265,12,140,98,"watchId"],[265,19,140,122],[265,28,140,98,"watchId"],[265,35,140,122],[266,0,140,122],[266,12,140,107,"location"],[266,20,140,122],[266,29,140,107,"location"],[266,37,140,122],[267,0,141,12],[267,12,141,18,"callback"],[267,20,141,26],[267,23,141,29,"watchCallbacks"],[267,37,141,43],[267,38,141,44,"watchId"],[267,45,141,43],[267,46,141,12],[269,0,142,12],[269,12,142,16,"callback"],[269,20,142,12],[269,22,142,26],[270,0,143,16,"callback"],[270,10,143,16,"callback"],[270,18,143,24],[270,19,143,25,"location"],[270,27,143,24],[270,28,143,16],[271,0,144,13],[271,9,142,12],[271,15,145,17],[272,0,146,16,"ExpoLocation"],[272,32,146,29,"removeWatchAsync"],[272,48,146,16],[272,49,146,46,"watchId"],[272,56,146,16],[273,0,147,13],[274,0,148,9],[274,7,140,34],[274,8,140,8],[275,0,149,5],[276,0,150,1],[278,0,151,7],[278,11,151,22,"geocodeAsync"],[278,23,151,7],[278,24,151,35,"address"],[278,31,151,7],[279,0,151,7],[280,0,151,7],[281,0,151,7],[282,0,151,7],[283,0,151,7],[283,46,152,11,"ExpoLocation"],[283,68,152,24,"geocodeAsync"],[283,80,152,11],[283,81,152,37,"address"],[283,88,152,11],[283,90,152,46,"catch"],[283,95,152,11],[283,96,152,52],[283,106,152,52,"error"],[283,111,152,57],[283,113,152,61],[284,0,153,8],[284,18,153,14,"platformUsesGoogleMaps"],[284,40,153,36],[284,43,153,39,"Platform"],[284,62,153,48,"OS"],[284,64,153,39],[284,69,153,55],[284,78,153,39],[284,82,153,68,"Platform"],[284,101,153,77,"OS"],[284,103,153,68],[284,108,153,84],[284,113,153,8],[286,0,154,8],[286,18,154,12,"platformUsesGoogleMaps"],[286,40,154,34],[286,44,154,38,"error"],[286,49,154,43],[286,50,154,44,"code"],[286,54,154,38],[286,59,154,53],[286,74,154,8],[286,76,154,70],[287,0,155,12],[287,20,155,16],[287,21,155,17,"googleApiKey"],[287,33,155,12],[287,35,155,31],[288,0,156,16],[288,24,156,22],[288,28,156,26,"Error"],[288,33,156,22],[288,34,156,32,"error"],[288,39,156,37],[288,40,156,38,"message"],[288,47,156,32],[288,50,156,48],[288,98,156,22],[288,99,156,16],[289,0,157,13],[291,0,158,12],[291,23,158,19,"_googleGeocodeAsync"],[291,42,158,38],[291,43,158,39,"address"],[291,50,158,38],[291,51,158,12],[292,0,159,9],[294,0,160,8],[294,20,160,14,"error"],[294,25,160,8],[295,0,161,5],[295,13,152,11],[295,14,151,7],[297,0,151,7],[298,0,151,7],[299,0,151,7],[300,0,151,7],[301,0,151,7],[302,0,151,7],[303,0,151,7],[305,0,163,7],[305,11,163,22,"reverseGeocodeAsync"],[305,30,163,7],[305,31,163,42,"location"],[305,39,163,7],[306,0,163,7],[307,0,163,7],[308,0,163,7],[309,0,163,7],[310,0,163,7],[310,18,164,8],[310,25,164,15,"location"],[310,33,164,23],[310,34,164,24,"latitude"],[310,42,164,8],[310,47,164,37],[310,55,164,8],[310,59,164,49],[310,66,164,56,"location"],[310,74,164,64],[310,75,164,65,"longitude"],[310,84,164,49],[310,89,164,79],[310,97,163,7],[311,0,163,7],[312,0,163,7],[313,0,163,7],[315,0,163,7],[315,18,165,14],[315,22,165,18,"TypeError"],[315,31,165,14],[315,32,165,28],[315,113,165,14],[315,114,163,7],[317,0,163,7],[318,0,163,7],[318,46,167,11,"ExpoLocation"],[318,68,167,24,"reverseGeocodeAsync"],[318,87,167,11],[318,88,167,44,"location"],[318,96,167,11],[318,98,167,54,"catch"],[318,103,167,11],[318,104,167,60],[318,114,167,60,"error"],[318,119,167,65],[318,121,167,69],[319,0,168,8],[319,18,168,14,"platformUsesGoogleMaps"],[319,40,168,36],[319,43,168,39,"Platform"],[319,62,168,48,"OS"],[319,64,168,39],[319,69,168,55],[319,78,168,39],[319,82,168,68,"Platform"],[319,101,168,77,"OS"],[319,103,168,68],[319,108,168,84],[319,113,168,8],[321,0,169,8],[321,18,169,12,"platformUsesGoogleMaps"],[321,40,169,34],[321,44,169,38,"error"],[321,49,169,43],[321,50,169,44,"code"],[321,54,169,38],[321,59,169,53],[321,74,169,8],[321,76,169,70],[322,0,170,12],[322,20,170,16],[322,21,170,17,"googleApiKey"],[322,33,170,12],[322,35,170,31],[323,0,171,16],[323,24,171,22],[323,28,171,26,"Error"],[323,33,171,22],[323,34,171,32,"error"],[323,39,171,37],[323,40,171,38,"message"],[323,47,171,32],[323,50,171,48],[323,98,171,22],[323,99,171,16],[324,0,172,13],[326,0,173,12],[326,23,173,19,"_googleReverseGeocodeAsync"],[326,49,173,45],[326,50,173,46,"location"],[326,58,173,45],[326,59,173,12],[327,0,174,9],[329,0,175,8],[329,20,175,14,"error"],[329,25,175,8],[330,0,176,5],[330,13,167,11],[330,14,163,7],[332,0,163,7],[333,0,163,7],[334,0,163,7],[335,0,163,7],[336,0,163,7],[337,0,163,7],[338,0,163,7],[340,0,178,0],[340,11,178,9,"setApiKey"],[340,20,178,0],[340,21,178,19,"apiKey"],[340,27,178,0],[340,29,178,27],[341,0,179,4,"googleApiKey"],[341,4,179,4,"googleApiKey"],[341,16,179,16],[341,19,179,19,"apiKey"],[341,25,179,4],[342,0,180,1],[344,0,181,0],[344,11,181,15,"_googleGeocodeAsync"],[344,30,181,0],[344,31,181,35,"address"],[344,38,181,0],[345,0,181,0],[346,0,181,0],[347,0,181,0],[348,0,181,0],[349,0,181,0],[350,0,181,0],[351,0,181,0],[351,46,182,25,"fetch"],[351,51,182,30],[351,52,182,34,"googleApiUrl"],[351,64,182,30],[351,77,182,54,"googleApiKey"],[351,89,182,30],[351,106,182,78,"encodeURI"],[351,115,182,87],[351,116,182,88,"address"],[351,123,182,87],[351,124,182,30],[351,125,181,0],[353,0,181,0],[354,0,182,10,"result"],[354,12,182,10,"result"],[354,18,181,0],[355,0,181,0],[356,0,181,0],[356,46,183,31,"result"],[356,52,183,37],[356,53,183,38,"json"],[356,57,183,31],[356,59,181,0],[358,0,181,0],[359,0,183,10,"resultObject"],[359,12,183,10,"resultObject"],[359,24,181,0],[361,0,181,0],[361,18,184,8,"resultObject"],[361,30,184,20],[361,31,184,21,"status"],[361,37,184,8],[361,42,184,32],[361,46,181,0],[362,0,181,0],[363,0,181,0],[364,0,181,0],[366,0,181,0],[366,18,185,14],[366,22,185,18,"Error"],[366,27,185,14],[366,28,185,24],[366,65,185,14],[366,66,181,0],[368,0,181,0],[369,0,181,0],[369,46,187,11,"resultObject"],[369,58,187,23],[369,59,187,24,"results"],[369,66,187,11],[369,67,187,32,"map"],[369,70,187,11],[369,71,187,36],[369,81,187,36,"result"],[369,87,187,42],[369,89,187,46],[370,0,188,8],[370,18,188,12,"location"],[370,26,188,20],[370,29,188,23,"result"],[370,35,188,29],[370,36,188,30,"geometry"],[370,44,188,23],[370,45,188,39,"location"],[370,53,188,8],[371,0,189,8],[371,21,189,15],[372,0,190,12,"latitude"],[372,16,190,12,"latitude"],[372,24,190,20],[372,26,190,22,"location"],[372,34,190,30],[372,35,190,31,"lat"],[372,38,189,15],[373,0,191,12,"longitude"],[373,16,191,12,"longitude"],[373,25,191,21],[373,27,191,23,"location"],[373,35,191,31],[373,36,191,32,"lng"],[374,0,189,15],[374,15,189,8],[375,0,193,5],[375,13,187,11],[375,14,181,0],[377,0,181,0],[378,0,181,0],[379,0,181,0],[380,0,181,0],[381,0,181,0],[382,0,181,0],[383,0,181,0],[385,0,195,0],[385,11,195,15,"_googleReverseGeocodeAsync"],[385,37,195,0],[385,38,195,42,"options"],[385,45,195,0],[386,0,195,0],[387,0,195,0],[388,0,195,0],[389,0,195,0],[390,0,195,0],[391,0,195,0],[392,0,195,0],[392,46,196,25,"fetch"],[392,51,196,30],[392,52,196,34,"googleApiUrl"],[392,64,196,30],[392,77,196,54,"googleApiKey"],[392,89,196,30],[392,105,196,77,"options"],[392,112,196,84],[392,113,196,85,"latitude"],[392,121,196,30],[392,130,196,97,"options"],[392,137,196,104],[392,138,196,105,"longitude"],[392,147,196,30],[392,148,195,0],[394,0,195,0],[395,0,196,10,"result"],[395,12,196,10,"result"],[395,18,195,0],[396,0,195,0],[397,0,195,0],[397,46,197,31,"result"],[397,52,197,37],[397,53,197,38,"json"],[397,57,197,31],[397,59,195,0],[399,0,195,0],[400,0,197,10,"resultObject"],[400,12,197,10,"resultObject"],[400,24,195,0],[402,0,195,0],[402,18,198,8,"resultObject"],[402,30,198,20],[402,31,198,21,"status"],[402,37,198,8],[402,42,198,32],[402,46,195,0],[403,0,195,0],[404,0,195,0],[405,0,195,0],[407,0,195,0],[407,18,199,14],[407,22,199,18,"Error"],[407,27,199,14],[407,28,199,24],[407,65,199,14],[407,66,195,0],[409,0,195,0],[410,0,195,0],[410,46,201,11,"resultObject"],[410,58,201,23],[410,59,201,24,"results"],[410,66,201,11],[410,67,201,32,"map"],[410,70,201,11],[410,71,201,36],[410,81,201,36,"result"],[410,87,201,42],[410,89,201,46],[411,0,202,8],[411,18,202,14,"address"],[411,25,202,21],[411,28,202,24],[411,30,202,8],[412,0,203,8,"result"],[412,14,203,8,"result"],[412,20,203,14],[412,21,203,15,"address_components"],[412,39,203,8],[412,40,203,34,"forEach"],[412,47,203,8],[412,48,203,42],[412,58,203,42,"component"],[412,67,203,51],[412,69,203,55],[413,0,204,12],[413,20,204,16,"component"],[413,29,204,25],[413,30,204,26,"types"],[413,35,204,16],[413,36,204,32,"includes"],[413,44,204,16],[413,45,204,41],[413,55,204,16],[413,56,204,12],[413,58,204,54],[414,0,205,16,"address"],[414,18,205,16,"address"],[414,25,205,23],[414,26,205,24,"city"],[414,30,205,16],[414,33,205,31,"component"],[414,42,205,40],[414,43,205,41,"long_name"],[414,52,205,16],[415,0,206,13],[415,17,204,12],[415,23,207,17],[415,27,207,21,"component"],[415,36,207,30],[415,37,207,31,"types"],[415,42,207,21],[415,43,207,37,"includes"],[415,51,207,21],[415,52,207,46],[415,68,207,21],[415,69,207,17],[415,71,207,65],[416,0,208,16,"address"],[416,18,208,16,"address"],[416,25,208,23],[416,26,208,24,"street"],[416,32,208,16],[416,35,208,33,"component"],[416,44,208,42],[416,45,208,43,"long_name"],[416,54,208,16],[417,0,209,13],[417,17,207,17],[417,23,210,17],[417,27,210,21,"component"],[417,36,210,30],[417,37,210,31,"types"],[417,42,210,21],[417,43,210,37,"includes"],[417,51,210,21],[417,52,210,46],[417,81,210,21],[417,82,210,17],[417,84,210,78],[418,0,211,16,"address"],[418,18,211,16,"address"],[418,25,211,23],[418,26,211,24,"region"],[418,32,211,16],[418,35,211,33,"component"],[418,44,211,42],[418,45,211,43,"long_name"],[418,54,211,16],[419,0,212,13],[419,17,210,17],[419,23,213,17],[419,27,213,21,"component"],[419,36,213,30],[419,37,213,31,"types"],[419,42,213,21],[419,43,213,37,"includes"],[419,51,213,21],[419,52,213,46],[419,61,213,21],[419,62,213,17],[419,64,213,58],[420,0,214,16,"address"],[420,18,214,16,"address"],[420,25,214,23],[420,26,214,24,"country"],[420,33,214,16],[420,36,214,34,"component"],[420,45,214,43],[420,46,214,44,"long_name"],[420,55,214,16],[421,0,215,13],[421,17,213,17],[421,23,216,17],[421,27,216,21,"component"],[421,36,216,30],[421,37,216,31,"types"],[421,42,216,21],[421,43,216,37,"includes"],[421,51,216,21],[421,52,216,46],[421,65,216,21],[421,66,216,17],[421,68,216,62],[422,0,217,16,"address"],[422,18,217,16,"address"],[422,25,217,23],[422,26,217,24,"postalCode"],[422,36,217,16],[422,39,217,37,"component"],[422,48,217,46],[422,49,217,47,"long_name"],[422,58,217,16],[423,0,218,13],[423,17,216,17],[423,23,219,17],[423,27,219,21,"component"],[423,36,219,30],[423,37,219,31,"types"],[423,42,219,21],[423,43,219,37,"includes"],[423,51,219,21],[423,52,219,46],[423,71,219,21],[423,72,219,17],[423,74,219,68],[424,0,220,16,"address"],[424,18,220,16,"address"],[424,25,220,23],[424,26,220,24,"name"],[424,30,220,16],[424,33,220,31,"component"],[424,42,220,40],[424,43,220,41,"long_name"],[424,52,220,16],[425,0,221,13],[426,0,222,9],[426,15,203,8],[427,0,223,8],[427,21,223,15,"address"],[427,28,223,8],[428,0,224,5],[428,13,201,11],[428,14,195,0],[430,0,195,0],[431,0,195,0],[432,0,195,0],[433,0,195,0],[434,0,195,0],[435,0,195,0],[436,0,195,0],[438,0,227,0],[438,11,227,9,"watchPosition"],[438,24,227,0],[438,25,227,23,"success"],[438,32,227,0],[438,34,227,32,"error"],[438,39,227,0],[438,41,227,39,"options"],[438,48,227,0],[438,50,227,48],[439,0,228,4,"_maybeInitializeEmitterSubscription"],[439,4,228,4,"_maybeInitializeEmitterSubscription"],[439,39,228,39],[441,0,229,4],[441,8,229,10,"watchId"],[441,15,229,17],[441,18,229,20,"_getNextWatchId"],[441,33,229,35],[441,35,229,4],[443,0,230,4,"watchCallbacks"],[443,4,230,4,"watchCallbacks"],[443,18,230,18],[443,19,230,19,"watchId"],[443,26,230,18],[443,27,230,4],[443,30,230,30,"success"],[443,37,230,4],[445,0,231,4,"ExpoLocation"],[445,26,231,17,"watchPositionImplAsync"],[445,48,231,4],[445,49,231,40,"watchId"],[445,56,231,4],[445,58,231,49,"options"],[445,65,231,4],[445,67,231,58,"catch"],[445,72,231,4],[445,73,231,64],[445,83,231,64,"err"],[445,86,231,67],[445,88,231,71],[446,0,232,8,"_removeWatcher"],[446,6,232,8,"_removeWatcher"],[446,20,232,22],[446,21,232,23,"watchId"],[446,28,232,22],[446,29,232,8],[448,0,233,8,"error"],[448,6,233,8,"error"],[448,11,233,13],[448,12,233,14],[449,0,233,16,"watchId"],[449,8,233,16,"watchId"],[449,15,233,23],[449,17,233,16,"watchId"],[449,24,233,14],[450,0,233,25,"message"],[450,8,233,25,"message"],[450,15,233,32],[450,17,233,34,"err"],[450,20,233,37],[450,21,233,38,"message"],[450,28,233,14],[451,0,233,47,"code"],[451,8,233,47,"code"],[451,12,233,51],[451,14,233,53,"err"],[451,17,233,56],[451,18,233,57,"code"],[452,0,233,14],[452,7,233,13],[452,8,233,8],[453,0,234,5],[453,5,231,4],[455,0,235,4],[455,11,235,11,"watchId"],[455,18,235,4],[456,0,236,1],[458,0,237,7],[458,11,237,22,"watchPositionAsync"],[458,29,237,7],[458,30,237,41,"options"],[458,37,237,7],[458,39,237,50,"callback"],[458,47,237,7],[459,0,237,7],[460,0,237,7],[461,0,237,7],[462,0,237,7],[463,0,237,7],[464,0,238,4,"_maybeInitializeEmitterSubscription"],[464,12,238,4,"_maybeInitializeEmitterSubscription"],[464,47,238,39],[466,0,239,10,"watchId"],[466,12,239,10,"watchId"],[466,19,237,7],[466,22,239,20,"_getNextWatchId"],[466,37,239,35],[466,39,237,7],[467,0,240,4,"watchCallbacks"],[467,12,240,4,"watchCallbacks"],[467,26,240,18],[467,27,240,19,"watchId"],[467,34,240,18],[467,35,240,4],[467,38,240,30,"callback"],[467,46,240,4],[468,0,237,7],[469,0,237,7],[469,46,241,10,"ExpoLocation"],[469,68,241,23,"watchPositionImplAsync"],[469,90,241,10],[469,91,241,46,"watchId"],[469,98,241,10],[469,100,241,55,"options"],[469,107,241,10],[469,108,237,7],[471,0,237,7],[472,0,237,7],[472,47,242,11],[473,0,243,8,"remove"],[473,14,243,8,"remove"],[473,20,242,11],[473,40,243,17],[474,0,244,12,"_removeWatcher"],[474,16,244,12,"_removeWatcher"],[474,30,244,26],[474,31,244,27,"watchId"],[474,38,244,26],[474,39,244,12],[475,0,245,9],[476,0,242,11],[476,13,237,7],[478,0,237,7],[479,0,237,7],[480,0,237,7],[481,0,237,7],[482,0,237,7],[483,0,237,7],[484,0,237,7],[486,0,249,0],[486,11,249,9,"clearWatch"],[486,21,249,0],[486,22,249,20,"watchId"],[486,29,249,0],[486,31,249,29],[487,0,250,4,"_removeWatcher"],[487,4,250,4,"_removeWatcher"],[487,18,250,18],[487,19,250,19,"watchId"],[487,26,250,18],[487,27,250,4],[488,0,251,1],[490,0,252,0],[490,11,252,9,"_removeWatcher"],[490,25,252,0],[490,26,252,24,"watchId"],[490,33,252,0],[490,35,252,33],[491,0,254,4],[491,8,254,8],[491,9,254,9,"watchCallbacks"],[491,23,254,23],[491,24,254,24,"watchId"],[491,31,254,23],[491,32,254,4],[491,34,254,34],[492,0,255,8],[493,0,256,5],[495,0,257,4,"ExpoLocation"],[495,26,257,17,"removeWatchAsync"],[495,42,257,4],[495,43,257,34,"watchId"],[495,50,257,4],[497,0,258,4],[497,11,258,11,"watchCallbacks"],[497,25,258,25],[497,26,258,26,"watchId"],[497,33,258,25],[497,34,258,4],[499,0,259,4],[499,8,259,8,"Object"],[499,14,259,14],[499,15,259,15,"keys"],[499,19,259,8],[499,20,259,20,"watchCallbacks"],[499,34,259,8],[499,36,259,36,"length"],[499,42,259,8],[499,47,259,47],[499,48,259,8],[499,52,259,52,"deviceEventSubscription"],[499,75,259,4],[499,77,259,77],[500,0,260,8,"LocationEventEmitter"],[500,6,260,8,"LocationEventEmitter"],[500,26,260,28],[500,27,260,29,"removeSubscription"],[500,45,260,8],[500,46,260,48,"deviceEventSubscription"],[500,69,260,8],[501,0,261,8,"deviceEventSubscription"],[501,6,261,8,"deviceEventSubscription"],[501,29,261,31],[501,32,261,34],[501,36,261,8],[502,0,262,5],[503,0,263,1],[505,0,264,0],[505,11,264,9,"getCurrentPosition"],[505,29,264,0],[505,30,264,28,"success"],[505,37,264,0],[505,39,264,70],[506,0,264,70],[506,8,264,37,"error"],[506,13,264,70],[506,84,264,45],[506,96,264,51],[506,97,264,54],[506,98,264,70],[507,0,264,70],[507,8,264,56,"options"],[507,15,264,70],[507,86,264,66],[507,88,264,70],[508,0,265,4],[508,28,265,14],[508,35,265,21,"success"],[508,42,265,14],[508,47,265,33],[508,57,265,4],[508,59,265,45],[508,99,265,4],[509,0,266,4],[509,28,266,14],[509,35,266,21,"options"],[509,42,266,14],[509,47,266,33],[509,55,266,4],[509,57,266,43],[509,85,266,4],[511,0,267,4,"_getCurrentPositionAsyncWrapper"],[511,4,267,4,"_getCurrentPositionAsyncWrapper"],[511,35,267,35],[511,36,267,36,"success"],[511,43,267,35],[511,45,267,45,"error"],[511,50,267,35],[511,52,267,52,"options"],[511,59,267,35],[511,60,267,4],[512,0,268,1],[514,0,271,0],[514,11,271,15,"_getCurrentPositionAsyncWrapper"],[514,42,271,0],[514,43,271,47,"success"],[514,50,271,0],[514,52,271,56,"error"],[514,57,271,0],[514,59,271,63,"options"],[514,66,271,0],[515,0,271,0],[516,0,271,0],[517,0,271,0],[518,0,271,0],[519,0,271,0],[520,0,271,0],[521,0,271,0],[522,0,271,0],[522,46,273,14,"ExpoLocation"],[522,68,273,27,"requestPermissionsAsync"],[522,91,273,14],[522,93,271,0],[524,0,271,0],[525,0,271,0],[526,0,271,0],[526,46,274,29,"getCurrentPositionAsync"],[526,69,274,52],[526,70,274,53,"options"],[526,77,274,52],[526,78,271,0],[528,0,271,0],[529,0,274,14,"result"],[529,12,274,14,"result"],[529,18,271,0],[530,0,275,8,"success"],[530,12,275,8,"success"],[530,19,275,15],[530,20,275,16,"result"],[530,26,275,15],[530,27,275,8],[531,0,271,0],[532,0,271,0],[534,0,271,0],[535,0,271,0],[536,0,271,0],[537,0,278,8,"error"],[537,12,278,8,"error"],[537,17,278,13],[537,32,278,8],[539,0,271,0],[540,0,271,0],[541,0,271,0],[542,0,271,0],[543,0,271,0],[544,0,271,0],[545,0,271,0],[547,0,281,7],[547,11,281,22,"requestPermissionsAsync"],[547,34,281,7],[548,0,281,7],[549,0,281,7],[550,0,281,7],[551,0,281,7],[552,0,281,7],[553,0,281,7],[553,46,282,10,"ExpoLocation"],[553,68,282,23,"requestPermissionsAsync"],[553,91,282,10],[553,93,281,7],[555,0,281,7],[556,0,281,7],[557,0,281,7],[558,0,281,7],[559,0,281,7],[560,0,281,7],[561,0,281,7],[563,0,285,7],[563,11,285,22,"hasServicesEnabledAsync"],[563,34,285,7],[564,0,285,7],[565,0,285,7],[566,0,285,7],[567,0,285,7],[568,0,285,7],[569,0,285,7],[569,46,286,17,"ExpoLocation"],[569,68,286,30,"hasServicesEnabledAsync"],[569,91,286,17],[569,93,285,7],[571,0,285,7],[572,0,285,7],[574,0,285,7],[575,0,285,7],[576,0,285,7],[577,0,285,7],[578,0,285,7],[579,0,285,7],[580,0,285,7],[582,0,289,0],[582,11,289,9,"_validateTaskName"],[582,28,289,0],[582,29,289,27,"taskName"],[582,37,289,0],[582,39,289,37],[583,0,290,4],[583,28,290,14,"taskName"],[583,36,290,22],[583,40,290,26],[583,47,290,33,"taskName"],[583,55,290,26],[583,60,290,46],[583,68,290,4],[583,70,290,56],[583,110,290,4],[584,0,291,1],[586,0,292,7],[586,11,292,22,"startLocationUpdatesAsync"],[586,36,292,7],[586,37,292,48,"taskName"],[586,45,292,7],[587,0,292,7],[588,0,292,7],[589,0,292,7],[590,0,292,7],[591,0,292,7],[592,0,292,7],[593,0,292,58,"options"],[593,12,292,58,"options"],[593,19,292,7],[593,84,292,68],[594,0,292,70,"accuracy"],[594,14,292,70,"accuracy"],[594,22,292,78],[594,24,292,80,"LocationAccuracy"],[594,40,292,96],[594,41,292,97,"Balanced"],[595,0,292,68],[595,13,292,7],[597,0,293,4,"_validateTaskName"],[597,12,293,4,"_validateTaskName"],[597,29,293,21],[597,30,293,22,"taskName"],[597,38,293,21],[597,39,293,4],[599,0,292,7],[600,0,292,7],[600,46,294,10,"ExpoLocation"],[600,68,294,23,"startLocationUpdatesAsync"],[600,93,294,10],[600,94,294,49,"taskName"],[600,102,294,10],[600,104,294,59,"options"],[600,111,294,10],[600,112,292,7],[602,0,292,7],[603,0,292,7],[604,0,292,7],[605,0,292,7],[606,0,292,7],[607,0,292,7],[608,0,292,7],[610,0,296,7],[610,11,296,22,"stopLocationUpdatesAsync"],[610,35,296,7],[610,36,296,47,"taskName"],[610,44,296,7],[611,0,296,7],[612,0,296,7],[613,0,296,7],[614,0,296,7],[615,0,297,4,"_validateTaskName"],[615,12,297,4,"_validateTaskName"],[615,29,297,21],[615,30,297,22,"taskName"],[615,38,297,21],[615,39,297,4],[617,0,296,7],[618,0,296,7],[618,46,298,10,"ExpoLocation"],[618,68,298,23,"stopLocationUpdatesAsync"],[618,92,298,10],[618,93,298,48,"taskName"],[618,101,298,10],[618,102,296,7],[620,0,296,7],[621,0,296,7],[622,0,296,7],[623,0,296,7],[624,0,296,7],[625,0,296,7],[626,0,296,7],[628,0,300,7],[628,11,300,22,"hasStartedLocationUpdatesAsync"],[628,41,300,7],[628,42,300,53,"taskName"],[628,50,300,7],[629,0,300,7],[630,0,300,7],[631,0,300,7],[632,0,300,7],[633,0,301,4,"_validateTaskName"],[633,12,301,4,"_validateTaskName"],[633,29,301,21],[633,30,301,22,"taskName"],[633,38,301,21],[633,39,301,4],[635,0,300,7],[635,47,302,11,"ExpoLocation"],[635,69,302,24,"hasStartedLocationUpdatesAsync"],[635,99,302,11],[635,100,302,55,"taskName"],[635,108,302,11],[635,109,300,7],[637,0,300,7],[638,0,300,7],[639,0,300,7],[640,0,300,7],[641,0,300,7],[642,0,300,7],[643,0,300,7],[645,0,305,0],[645,11,305,9,"_validateRegions"],[645,27,305,0],[645,28,305,26,"regions"],[645,35,305,0],[645,37,305,35],[646,0,306,4],[646,8,306,8],[646,9,306,9,"regions"],[646,16,306,8],[646,20,306,20,"regions"],[646,27,306,27],[646,28,306,28,"length"],[646,34,306,20],[646,39,306,39],[646,40,306,4],[646,42,306,42],[647,0,307,8],[647,12,307,14],[647,16,307,18,"Error"],[647,21,307,14],[647,22,307,24],[647,123,307,14],[647,124,307,8],[648,0,308,5],[650,0,309,4],[650,25,309,25,"regions"],[650,32,309,4],[650,192,309,34],[651,0,309,34],[653,0,309,34],[654,0,309,34],[655,0,309,34],[656,0,309,34],[657,0,309,34],[658,0,309,34],[659,0,309,34],[660,0,309,34],[662,0,309,34],[662,10,309,15,"region"],[662,17,309,34],[664,0,310,8],[664,10,310,12],[664,17,310,19,"region"],[664,24,310,25],[664,25,310,26,"latitude"],[664,33,310,12],[664,38,310,39],[664,46,310,8],[664,48,310,49],[665,0,311,12],[665,14,311,18],[665,18,311,22,"TypeError"],[665,27,311,18],[665,74,311,76,"region"],[665,81,311,82],[665,82,311,83,"latitude"],[665,90,311,18],[665,106,311,12],[666,0,312,9],[668,0,313,8],[668,10,313,12],[668,17,313,19,"region"],[668,24,313,25],[668,25,313,26,"longitude"],[668,34,313,12],[668,39,313,40],[668,47,313,8],[668,49,313,50],[669,0,314,12],[669,14,314,18],[669,18,314,22,"TypeError"],[669,27,314,18],[669,75,314,77,"region"],[669,82,314,83],[669,83,314,84,"longitude"],[669,92,314,18],[669,108,314,12],[670,0,315,9],[672,0,316,8],[672,10,316,12],[672,17,316,19,"region"],[672,24,316,25],[672,25,316,26,"radius"],[672,31,316,12],[672,36,316,37],[672,44,316,8],[672,46,316,47],[673,0,317,12],[673,14,317,18],[673,18,317,22,"TypeError"],[673,27,317,18],[673,72,317,74,"region"],[673,79,317,80],[673,80,317,81,"radius"],[673,86,317,18],[673,102,317,12],[674,0,318,9],[675,0,319,5],[676,0,320,1],[678,0,321,7],[678,11,321,22,"startGeofencingAsync"],[678,31,321,7],[678,32,321,43,"taskName"],[678,40,321,7],[679,0,321,7],[680,0,321,7],[681,0,321,7],[682,0,321,7],[683,0,321,7],[684,0,321,7],[685,0,321,53,"regions"],[685,12,321,53,"regions"],[685,19,321,7],[685,84,321,63],[685,86,321,7],[687,0,322,4,"_validateTaskName"],[687,12,322,4,"_validateTaskName"],[687,29,322,21],[687,30,322,22,"taskName"],[687,38,322,21],[687,39,322,4],[689,0,323,4,"_validateRegions"],[689,12,323,4,"_validateRegions"],[689,28,323,20],[689,29,323,21,"regions"],[689,36,323,20],[689,37,323,4],[691,0,321,7],[692,0,321,7],[692,46,324,10,"ExpoLocation"],[692,68,324,23,"startGeofencingAsync"],[692,88,324,10],[692,89,324,44,"taskName"],[692,97,324,10],[692,99,324,54],[693,0,324,56,"regions"],[693,14,324,56,"regions"],[693,21,324,63],[693,23,324,56,"regions"],[694,0,324,54],[694,13,324,10],[694,14,321,7],[696,0,321,7],[697,0,321,7],[698,0,321,7],[699,0,321,7],[700,0,321,7],[701,0,321,7],[702,0,321,7],[704,0,326,7],[704,11,326,22,"stopGeofencingAsync"],[704,30,326,7],[704,31,326,42,"taskName"],[704,39,326,7],[705,0,326,7],[706,0,326,7],[707,0,326,7],[708,0,326,7],[709,0,327,4,"_validateTaskName"],[709,12,327,4,"_validateTaskName"],[709,29,327,21],[709,30,327,22,"taskName"],[709,38,327,21],[709,39,327,4],[711,0,326,7],[712,0,326,7],[712,46,328,10,"ExpoLocation"],[712,68,328,23,"stopGeofencingAsync"],[712,87,328,10],[712,88,328,43,"taskName"],[712,96,328,10],[712,97,326,7],[714,0,326,7],[715,0,326,7],[716,0,326,7],[717,0,326,7],[718,0,326,7],[719,0,326,7],[720,0,326,7],[722,0,330,7],[722,11,330,22,"hasStartedGeofencingAsync"],[722,36,330,7],[722,37,330,48,"taskName"],[722,45,330,7],[723,0,330,7],[724,0,330,7],[725,0,330,7],[726,0,330,7],[727,0,331,4,"_validateTaskName"],[727,12,331,4,"_validateTaskName"],[727,29,331,21],[727,30,331,22,"taskName"],[727,38,331,21],[727,39,331,4],[729,0,330,7],[729,47,332,11,"ExpoLocation"],[729,69,332,24,"hasStartedGeofencingAsync"],[729,94,332,11],[729,95,332,50,"taskName"],[729,103,332,11],[729,104,330,7],[731,0,330,7],[732,0,330,7],[733,0,330,7],[734,0,330,7],[735,0,330,7],[736,0,330,7],[737,0,330,7],[739,0,334,7],[739,11,334,16,"installWebGeolocationPolyfill"],[739,40,334,7],[739,43,334,48],[740,0,335,4],[740,8,335,8,"Platform"],[740,27,335,17,"OS"],[740,29,335,8],[740,34,335,24],[740,39,335,4],[740,41,335,31],[741,0,339,8,"window"],[741,6,339,8,"window"],[741,12,339,14],[741,13,339,15,"navigator"],[741,22,339,8],[741,23,339,25,"geolocation"],[741,34,339,8],[741,37,339,39],[742,0,340,12,"getCurrentPosition"],[742,8,340,12,"getCurrentPosition"],[742,26,340,30],[742,28,340,12,"getCurrentPosition"],[742,46,339,39],[743,0,341,12,"watchPosition"],[743,8,341,12,"watchPosition"],[743,21,341,25],[743,23,341,12,"watchPosition"],[743,36,339,39],[744,0,342,12,"clearWatch"],[744,8,342,12,"clearWatch"],[744,18,342,22],[744,20,342,12,"clearWatch"],[744,30,339,39],[745,0,345,12,"stopObserving"],[745,8,345,12,"stopObserving"],[745,21,345,25],[745,23,345,27],[745,48,345,33],[745,49,345,36],[746,0,339,39],[746,7,339,8],[747,0,347,5],[748,0,348,1]]},"type":"js/module"}]}